#pragma checksum "G:\document\fog_win\Fog\Fog\Pages\Settings\SettingAccount.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "F73178519BA7BD7579AE3658A546FA2942A7F77A27080A954BC03375783F4420"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Fog.Pages.Settings
{
    partial class SettingAccount : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Microsoft.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Image_Source(global::Microsoft.UI.Xaml.Controls.Image obj, global::Microsoft.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Microsoft.UI.Xaml.Media.ImageSource) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.Source = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_PersonPicture_ProfilePicture(global::Microsoft.UI.Xaml.Controls.PersonPicture obj, global::Microsoft.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Microsoft.UI.Xaml.Media.ImageSource) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.ProfilePicture = value;
            }
            public static void Set_Microsoft_UI_Xaml_UIElement_Visibility(global::Microsoft.UI.Xaml.UIElement obj, global::Microsoft.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class SettingAccount_obj3_Bindings :
            global::Microsoft.UI.Xaml.IDataTemplateExtension,
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            ISettingAccount_Bindings
        {
            private global::Fog.ServiceAccount dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj3;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj5;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj6;
            private global::Microsoft.UI.Xaml.Controls.Image obj7;
            private global::Microsoft.UI.Xaml.Controls.PersonPicture obj8;
            private global::Microsoft.UI.Xaml.Controls.Image obj9;
            private global::Microsoft.UI.Xaml.Controls.Image obj10;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj5TextDisabled = false;
            private static bool isobj6TextDisabled = false;
            private static bool isobj7SourceDisabled = false;
            private static bool isobj8ProfilePictureDisabled = false;
            private static bool isobj9VisibilityDisabled = false;
            private static bool isobj10VisibilityDisabled = false;

            private SettingAccount_obj3_BindingsTracking bindingsTracking;

            public SettingAccount_obj3_Bindings()
            {
                this.bindingsTracking = new SettingAccount_obj3_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 54 && columnNumber == 48)
                {
                    isobj5TextDisabled = true;
                }
                else if (lineNumber == 51 && columnNumber == 48)
                {
                    isobj6TextDisabled = true;
                }
                else if (lineNumber == 29 && columnNumber == 44)
                {
                    isobj7SourceDisabled = true;
                }
                else if (lineNumber == 31 && columnNumber == 52)
                {
                    isobj8ProfilePictureDisabled = true;
                }
                else if (lineNumber == 33 && columnNumber == 92)
                {
                    isobj9VisibilityDisabled = true;
                }
                else if (lineNumber == 34 && columnNumber == 92)
                {
                    isobj10VisibilityDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3: // Pages\Settings\SettingAccount.xaml line 17
                        this.obj3 = new global::System.WeakReference(global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.GridViewItem>(target));
                        break;
                    case 5: // Pages\Settings\SettingAccount.xaml line 54
                        this.obj5 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 6: // Pages\Settings\SettingAccount.xaml line 51
                        this.obj6 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 7: // Pages\Settings\SettingAccount.xaml line 29
                        this.obj7 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                        break;
                    case 8: // Pages\Settings\SettingAccount.xaml line 31
                        this.obj8 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.PersonPicture>(target);
                        break;
                    case 9: // Pages\Settings\SettingAccount.xaml line 33
                        this.obj9 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                        break;
                    case 10: // Pages\Settings\SettingAccount.xaml line 34
                        this.obj10 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            public void DataContextChangedHandler(global::Microsoft.UI.Xaml.FrameworkElement sender, global::Microsoft.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj3.Target as global::Microsoft.UI.Xaml.Controls.GridViewItem).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_(global::WinRT.CastExtensions.As<global::Fog.ServiceAccount>(item), 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // ISettingAccount_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::Fog.ServiceAccount>(newDataRoot);
                    return true;
                }
                return false;
            }

            private bool TryGet_Type(out global::System.String val)
            {
                global::Fog.ServiceAccount obj;
                if (TryGet_(out obj) && obj != null)
                {
                    val = obj.Type;
                    return true;
                }
                else
                {
                    val = default(global::System.String);
                    return false;
                }
            }

            private bool TryGet_(out global::Fog.ServiceAccount val)
            {
                val = this.dataRoot;
                return true;
            }

            private delegate void InvokeFunctionDelegate(int phase);
            private global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate> PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();

            private void Invoke_Fog_Pages_Settings_SettingAccount_M_isGitHub_1421152990(int phase)
            {
                global::System.String p0;
                if (!TryGet_Type(out p0)) { return; }
                global::Microsoft.UI.Xaml.Visibility result = global::Fog.Pages.Settings.SettingAccount.isGitHub(p0);
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Pages\Settings\SettingAccount.xaml line 33
                    if (!isobj9VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj9, result);
                    }
                }
            }

            private void Invoke_Fog_Pages_Settings_SettingAccount_M_isGitLab_1421152990(int phase)
            {
                global::System.String p0;
                if (!TryGet_Type(out p0)) { return; }
                global::Microsoft.UI.Xaml.Visibility result = global::Fog.Pages.Settings.SettingAccount.isGitLab(p0);
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Pages\Settings\SettingAccount.xaml line 34
                    if (!isobj10VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj10, result);
                    }
                }
            }

            private void CompleteUpdate(int phase)
            {
                var functions = this.PendingFunctionBindings;
                this.PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();
                foreach (var function in functions.Values)
                {
                    function.Invoke(phase);
                }
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Fog.ServiceAccount obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Host(obj.Host, phase);
                        this.Update_Name(obj.Name, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Avatar(obj.Avatar, phase);
                        this.Update_Type(obj.Type, phase);
                    }
                }
                this.Update_Fog_Pages_Settings_SettingAccount_M_isGitHub_1421152990(phase);
                this.Update_Fog_Pages_Settings_SettingAccount_M_isGitLab_1421152990(phase);
                this.CompleteUpdate(phase);
            }
            private void Update_Host(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Pages\Settings\SettingAccount.xaml line 54
                    if (!isobj5TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj5, obj, null);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Pages\Settings\SettingAccount.xaml line 51
                    if (!isobj6TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj6, obj, null);
                    }
                }
            }
            private void Update_Avatar(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Pages\Settings\SettingAccount.xaml line 29
                    if (!isobj7SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Image_Source(this.obj7, (global::Microsoft.UI.Xaml.Media.ImageSource) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.ImageSource), obj), null);
                    }
                    // Pages\Settings\SettingAccount.xaml line 31
                    if (!isobj8ProfilePictureDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_PersonPicture_ProfilePicture(this.obj8, (global::Microsoft.UI.Xaml.Media.ImageSource) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.ImageSource), obj), null);
                    }
                }
            }
            private void Update_Type(global::System.String obj, int phase)
            {
                if (obj != null)
                {
                    this.Update_Fog_Pages_Settings_SettingAccount_M_isGitHub_1421152990(phase);
                    this.Update_Fog_Pages_Settings_SettingAccount_M_isGitLab_1421152990(phase);
                }
            }
            private void Update_Fog_Pages_Settings_SettingAccount_M_isGitHub_1421152990(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    if (!isobj9VisibilityDisabled)
                    {
                        this.PendingFunctionBindings["Fog_Pages_Settings_SettingAccount_M_isGitHub_1421152990"] = new InvokeFunctionDelegate(this.Invoke_Fog_Pages_Settings_SettingAccount_M_isGitHub_1421152990); 
                    }
                }
            }
            private void Update_Fog_Pages_Settings_SettingAccount_M_isGitLab_1421152990(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    if (!isobj10VisibilityDisabled)
                    {
                        this.PendingFunctionBindings["Fog_Pages_Settings_SettingAccount_M_isGitLab_1421152990"] = new InvokeFunctionDelegate(this.Invoke_Fog_Pages_Settings_SettingAccount_M_isGitLab_1421152990); 
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class SettingAccount_obj3_BindingsTracking
            {
                private global::System.WeakReference<SettingAccount_obj3_Bindings> weakRefToBindingObj; 

                public SettingAccount_obj3_BindingsTracking(SettingAccount_obj3_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<SettingAccount_obj3_Bindings>(obj);
                }

                public SettingAccount_obj3_Bindings TryGetBindingObject()
                {
                    SettingAccount_obj3_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                }

            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class SettingAccount_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            ISettingAccount_Bindings
        {
            private global::Fog.Pages.Settings.SettingAccount dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.GridView obj12;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj12ItemsSourceDisabled = false;

            private SettingAccount_obj1_BindingsTracking bindingsTracking;

            public SettingAccount_obj1_Bindings()
            {
                this.bindingsTracking = new SettingAccount_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 91 && columnNumber == 27)
                {
                    isobj12ItemsSourceDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 12: // Pages\Settings\SettingAccount.xaml line 86
                        this.obj12 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.GridView>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // ISettingAccount_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::Fog.Pages.Settings.SettingAccount>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Fog.Pages.Settings.SettingAccount obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ServiceAccounts(obj.ServiceAccounts, phase);
                    }
                }
            }
            private void Update_ServiceAccounts(global::System.Collections.ObjectModel.ObservableCollection<global::Fog.ServiceAccount> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ServiceAccounts(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Pages\Settings\SettingAccount.xaml line 86
                    if (!isobj12ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj12, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class SettingAccount_obj1_BindingsTracking
            {
                private global::System.WeakReference<SettingAccount_obj1_Bindings> weakRefToBindingObj; 

                public SettingAccount_obj1_BindingsTracking(SettingAccount_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<SettingAccount_obj1_Bindings>(obj);
                }

                public SettingAccount_obj1_Bindings TryGetBindingObject()
                {
                    SettingAccount_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ServiceAccounts(null);
                }

                public void PropertyChanged_ServiceAccounts(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SettingAccount_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::Fog.ServiceAccount> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::Fog.ServiceAccount>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ServiceAccounts(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    SettingAccount_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::Fog.ServiceAccount> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::Fog.ServiceAccount>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::Fog.ServiceAccount> cache_ServiceAccounts = null;
                public void UpdateChildListeners_ServiceAccounts(global::System.Collections.ObjectModel.ObservableCollection<global::Fog.ServiceAccount> obj)
                {
                    if (obj != cache_ServiceAccounts)
                    {
                        if (cache_ServiceAccounts != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ServiceAccounts).PropertyChanged -= PropertyChanged_ServiceAccounts;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ServiceAccounts).CollectionChanged -= CollectionChanged_ServiceAccounts;
                            cache_ServiceAccounts = null;
                        }
                        if (obj != null)
                        {
                            cache_ServiceAccounts = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ServiceAccounts;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ServiceAccounts;
                        }
                    }
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Pages\Settings\SettingAccount.xaml line 16
                {
                    this.ServiceAccount_GridViewDataTemplate = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.DataTemplate>(target);
                }
                break;
            case 11: // Pages\Settings\SettingAccount.xaml line 78
                {
                    this.AddAccount_Button = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.AddAccount_Button).Click += this.Button_Click;
                }
                break;
            case 12: // Pages\Settings\SettingAccount.xaml line 86
                {
                    this.ServiceAccounts_GridView = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.GridView>(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Pages\Settings\SettingAccount.xaml line 1
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    SettingAccount_obj1_Bindings bindings = new SettingAccount_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 3: // Pages\Settings\SettingAccount.xaml line 17
                {                    
                    global::Microsoft.UI.Xaml.Controls.GridViewItem element3 = (global::Microsoft.UI.Xaml.Controls.GridViewItem)target;
                    SettingAccount_obj3_Bindings bindings = new SettingAccount_obj3_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element3.DataContext);
                    element3.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Microsoft.UI.Xaml.DataTemplate.SetExtensionInstance(element3, bindings);
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element3, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

